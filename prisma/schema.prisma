generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model deck {
  id      Int     @id @default(autoincrement())
  idUser  Int
  vida    Int
  maxVida Int
  nome    String
  foto    String
  idCard  Int
  poder   Int
  card    card    @relation(fields: [idCard], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario usuario @relation(fields: [idUser], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model inimigo {
  id         Int      @id @default(autoincrement())
  nome       String
  foto       String
  fase       Int
  idUsuario  Int
  idInimigos Int
  poder      Int
  vida       Int
  inimigos   inimigos @relation(fields: [idInimigos], references: [id], onDelete: NoAction, onUpdate: NoAction)
  usuario    usuario  @relation(fields: [idUsuario], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model card {
  id       Int        @id @default(autoincrement())
  foto     String
  poder    Int
  vida     Int
  nome     String
  deck     deck[]
  ouroCard ouroCard[]
}

model usuario {
  id       Int        @id @default(autoincrement())
  token    String
  senha    String
  email    String
  foto     String
  nome     String
  fase     Int
  deck     deck[]
  inimigo  inimigo[]
  ouro     ouro[]
  vitorias vitorias[]
}

model inimigos {
  id      Int       @id @default(autoincrement())
  poder   Int
  nome    String
  foto    String
  vida    Int
  fase    Int
  inimigo inimigo[]
}

model vitorias {
  id        Int     @id @default(autoincrement())
  vitorias  Int
  usuarioId Int
  usuario   usuario @relation(fields: [usuarioId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ranking {
  id        Int    @id @default(autoincrement())
  ranking   Int
  usuarioId Int
  nome      String
  foto      String
}

model ouro {
  id        Int     @id @default(autoincrement())
  ouro      Int
  usuarioId Int
  usuario   usuario @relation(fields: [usuarioId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ouroCard {
  id     Int  @id @default(autoincrement())
  ouro   Int
  cardId Int
  card   card @relation(fields: [cardId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
